---
type Props = {
  title: string;
  width?: number | string;
  height?: number | string;
};

const { title, width, height, class: className } = Astro.props;
---

<span class:list={[className, "icon-wrapper"]}>
  <svg
    class="icon"
    id="linkedin-icon"
    aria-hidden="true"
    focusable="false"
    role="img"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 32 32"
    width={width || "1.75rem"}
    height={height || "1.75rem"}
  >
    <defs>
      <style>
        .linkedin-icon-cls-1 {
          fill: none;
        }
      </style>
    </defs>
    <title>{title}</title>
    <g>
      <path d="M29,0H3A3,3,0,0,0,0,3V29a3,3,0,0,0,3,3H29a3,3,0,0,0,3-3V3A3,3,0,0,0,29,0ZM10.2,26H6V12.2h4.2ZM8.1,10.3A2.4,2.4,0,1,1,10.5,7.9,2.4,2.4,0,0,1,8.1,10.3ZM26,26H21.8V18.3c0-1.8-0.7-3-2.3-3s-2.7,1.3-2.7,3V26H12.6V12.2h4.2v1.9h0.1a4.5,4.5,0,0,1,4.1-2.3c3,0,5.1,2,5.1,6.3Z"></path>
    </g>
    <rect
      id="_Transparent_Rectangle_"
      data-name="<Transparent Rectangle>"
      class="linkedin-icon-cls-1"
      width="32"
      height="32"
    >
    </rect>
  </svg>
</span>

<style>
  .icon-wrapper {
    display: inline-block;
  }

  .icon {
    display: block;
    fill: currentColor;
  }
</style>